openapi: 3.0.0
info:
  title: WireGuard VPN Management API
  description: |
    API for managing WireGuard VPN users and configurations.
    Allows adding, listing, and deleting WireGuard clients.
  version: 1.0.0
  contact:
    name: API Support

servers:
  - url: http://localhost:8080
    description: Local development server

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: key
  schemas:
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Error message
    Client:
      type: object
      properties:
        name:
          type: string
          example: client1
        ipv4:
          type: string
          example: 10.66.66.2
        ipv6:
          type: string
          example: fd42:42:42::2
        config:
          type: string
          example: |
            [Interface]
            PrivateKey = abc123...
            Address = 10.66.66.2/32,fd42:42:42::2/128
            DNS = 1.1.1.1,1.0.0.1
            
            [Peer]
            PublicKey = def456...
            PresharedKey = ghi789...
            Endpoint = vpn.example.com:51820
            AllowedIPs = 0.0.0.0/0,::/0
    AddUserRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: client1
        ipv4:
          type: string
          example: 10.66.66.2
        ipv6:
          type: string
          example: fd42:42:42::2
    DeleteUserRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: client1
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Operation completed successfully
    ClientsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/Client'
    ClientResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Client added successfully
        data:
          $ref: '#/components/schemas/Client'
    WireGuardStatusResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            interface:
              type: string
              example: wg0
            running:
              type: boolean
              example: true
            status_output:
              type: string
              example: |-
                interface: wg0
                public key: aB3Cdf...
                private key: (hidden)
            interface_output:
              type: string
              example: |-
                3: wg0: <POINTOPOINT,NOARP,UP,LOWER_UP> mtu 1420 qdisc noqueue state UNKNOWN...
            port_status:
              type: object
              properties:
                port:
                  type: string
                  example: "51820"
                listening:
                  type: boolean
                  example: true
                details:
                  type: string
                  example: |-
                    udp UNCONN 0 0 0.0.0.0:51820 0.0.0.0:* users:((wireguard,pid=1234,fd=5))
            system_load:
              type: string
              example: "load average: 0.08, 0.03, 0.01"
            peers:
              type: array
              items:
                type: object
                properties:
                  client_name:
                    type: string
                    example: client1
                  public_key:
                    type: string
                    example: dE5fG6h...
                  preshared_key:
                    type: string
                    example: (hidden)
                  endpoint:
                    type: string
                    example: 192.168.1.5:58765
                  allowed_ips:
                    type: string
                    example: 10.66.66.2/32,fd42:42:42::2/128
                  latest_handshake:
                    type: string
                    example: 1620000000
                  transfer_rx:
                    type: string
                    example: 25460
                  transfer_tx:
                    type: string
                    example: 12840
            server_info:
              type: object
              properties:
                public_ip:
                  type: string
                  example: vpn.example.com
                port:
                  type: string
                  example: "51820"
                public_key:
                  type: string
                  example: aB3Cdf...
                host_info:
                  type: string
                  example: "Darwin admin-machine 22.4.0 Darwin Kernel Version 22.4.0..."
            system:
              type: object
              properties:
                kernel_module:
                  type: string
                  example: "wireguard 16384 0 - Live 0x0000000000000000"
                service_status:
                  type: string
                  example: |-
                    ‚óè wg-quick@wg0.service - WireGuard via wg-quick(8) for wg0
                wg_installed:
                  type: boolean
                  example: true
                wg_quick_installed:
                  type: boolean
                  example: true
                config_exists:
                  type: boolean
                  example: true
                params_exists:
                  type: boolean
                  example: true
                config_file:
                  type: string
                  example: "/etc/wireguard/wg0.conf"
                params_file:
                  type: string
                  example: "/etc/wireguard/params"
                clients_dir:
                  type: string
                  example: "/home/wireguard/users"
            parameters:
              type: object
              description: "Only included when in debug mode"
              properties:
                ServerPubIP:
                  type: string
                  example: "vpn.example.com"
                ServerPubNIC:
                  type: string
                  example: "eth0"
                ServerWGNIC:
                  type: string
                  example: "wg0"
                ServerWGIPv4:
                  type: string
                  example: "10.66.66.1"
                ServerWGIPv6:
                  type: string
                  example: "fd42:42:42::1"
                ServerPort:
                  type: string
                  example: "51820"
                ServerPrivKey:
                  type: string
                  example: "(hidden)"
                ServerPubKey:
                  type: string
                  example: "aB3Cdf..."
                ClientDNS1:
                  type: string
                  example: "1.1.1.1"
                ClientDNS2:
                  type: string
                  example: "1.0.0.1"
                AllowedIPs:
                  type: string
                  example: "0.0.0.0/0,::/0"

paths:
  /api/users:
    get:
      summary: List all WireGuard clients
      description: Returns a list of all configured WireGuard clients and their configurations
      operationId: listUsers
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientsResponse'
        '401':
          description: Unauthorized - Invalid or missing API token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/users/add:
    post:
      summary: Add a new WireGuard client
      description: Creates a new WireGuard client configuration with the provided details
      operationId: addUser
      security:
        - ApiKeyAuth: []
      requestBody:
        description: Client details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUserRequest'
      responses:
        '200':
          description: Client added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
        '400':
          description: Invalid request - Missing or invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - Invalid or missing API token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict - Client with the same name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/users/delete:
    post:
      summary: Delete a WireGuard client
      description: Removes a WireGuard client configuration
      operationId: deleteUser
      security:
        - ApiKeyAuth: []
      requestBody:
        description: Client to delete
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserRequest'
      responses:
        '200':
          description: Client deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Invalid request - Missing or invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - Invalid or missing API token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found - Client does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/wireguard-status:
    get:
      summary: Get WireGuard server status
      description: Returns detailed information about the WireGuard server status, including connected peers, transfer statistics, and configuration details
      operationId: getWireGuardStatus
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WireGuardStatusResponse'
        '401':
          description: Unauthorized - Invalid or missing API token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'